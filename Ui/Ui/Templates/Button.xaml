<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:Ui"
                    xmlns:converters="clr-namespace:Ui.Converters">
    <!-- FocusVisual -->

 

    <!-- Button -->
    <Style TargetType="Button">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border Background="{DynamicResource {x:Static ui:ResourceKeys+Focus.Overlay}}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="MinHeight"
                Value="23" />
        <Setter Property="MinWidth"
                Value="75" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            TextBlock.Foreground="{DynamicResource {x:Static ui:ResourceKeys+Enabled.Foreground}}"
                            TextBlock.FontWeight="Bold"
                            BorderBrush="{DynamicResource {x:Static ui:ResourceKeys+Enabled.Foreground}}"
                            Background="{DynamicResource {x:Static ui:ResourceKeys+Enabled.Background}}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.CornerRadius>
                            <MultiBinding>
                                <MultiBinding.Bindings>
                                    <Binding Path="(Border.CornerRadius)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(ui:Grouping.Position)" RelativeSource="{RelativeSource TemplatedParent}" />                                    
                                </MultiBinding.Bindings>
                                <MultiBinding.Converter>
                                    <converters:GroupedCornerRadiusConverter />
                                </MultiBinding.Converter>
                            </MultiBinding>
                        </Border.CornerRadius>
                        <Grid>
                            <ContentPresenter Margin="2"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True" />
                            <Border x:Name="HighlightBorder"
                                    BorderThickness="0"
                                    Background="Transparent" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static ui:ResourceKeys+Enabled.Background}}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static ui:ResourceKeys+Enabled.Foreground}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HighlightBorder" Property="Background" Value="{DynamicResource {x:Static ui:ResourceKeys+Highlight.Overlay}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static ui:ResourceKeys+Disabled.Foreground}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDefault" Value="true" />
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static ui:ResourceKeys+Disabled.Background}}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static ui:ResourceKeys+Disabled.Foreground}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDefault" Value="false" />
                                <Condition Property="IsEnabled" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="TextBlock.Foreground" Value="{DynamicResource {x:Static ui:ResourceKeys+Disabled.Foreground}}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static ui:ResourceKeys+Disabled.Background}}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Default property values -->
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Border.CornerRadius" Value="5" />
        <Setter Property="Margin" Value="2" />
    </Style>
</ResourceDictionary>